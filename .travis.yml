matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: generic

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
    else
      yarn release
    fi
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"

before_script:
 - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install yarn; fi

# - npm install
# - if [ "$TRAVIS_OS_NAME" = "linux" ]; then docker run -c "npm install && npm run build-windows"; fi
# - if [ "$TRAVIS_OS_NAME" = "linux" ]; then docker run -c "npm install && npm run build-linux"; fi
# - if [ "$TRAVIS_OS_NAME" = "linux" ]; then docker run -c "npm install && npm run build-raspberrypi"; fi
# - if [ "$TRAVIS_OS_NAME" = "osx" ]; then npm run build-windows; fi
# - if [ "$TRAVIS_OS_NAME" = "osx" ]; then npm run build-linux; fi
# - if [ "$TRAVIS_OS_NAME" = "osx" ]; then npm run build-raspberrypi; fi
# - if [ "$TRAVIS_OS_NAME" = "osx" ]; then npm run build-macos; fi
#deploy:
#  provider: releases
#  api_key: "GITHUB OAUTH TOKEN"
#  file:
#    - ./dist/*.exe
#    - ./dist/*.AppImage
#    - ./dist/*.dmg
#  skip_cleanup: true
#  draft: true
